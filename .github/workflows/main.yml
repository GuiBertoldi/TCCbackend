name: Analysis Sonar

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=GuiBertoldi_tccbackend

build:
  name: Build Docker
  runs-on: ubuntu-latest
  needs: sonarcloud

  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build project
      run: mvn clean install -DskipTests

    - name: Login Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/tccbackend .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/tccbackend

  deploy:
    name: Deploy to AWS
    runs-on: self-hosted
    needs: build

    steps:
      - name: Pull image from Docker Hub
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/tccbackend:latest

      - name: Remove existing Docker container
        run: sudo docker rm -f tccbackend

      - name: Run Docker container
        run: sudo docker run -d -p 8080:8080 -e 'DATABASE_USERNAME=${{secrets.DATABASE_USERNAME}}' -e 'DATABASE_PASSWORD=${{secrets.DATABASE_PASSWORD}}' -e 'DATABASE_URL=${{secrets.DATABASE_URL}}' -e 'JWT_ENCODING=${{secrets.JWT_ENCODING}}' --name tccbackend ${{secrets.DOCKER_USERNAME}}/tccbackend:latest
